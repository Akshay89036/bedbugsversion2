{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/akshayrajendraprasad/Downloads/Bedbugzbgone-1b773fb25e3250addc52927234b8e04bf7d3be81/bedbugzgone/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\n\nvar __spreadValues = function __spreadValues(a, b) {\n  for (var prop in b || (b = {})) {\n    if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n\n  if (__getOwnPropSymbols) {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropSymbols(b)),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var prop = _step.value;\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  return a;\n};\n\nvar __objRest = function __objRest(source, exclude) {\n  var target = {};\n\n  for (var prop in source) {\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  }\n\n  if (source != null && __getOwnPropSymbols) {\n    var _iterator2 = _createForOfIteratorHelper(__getOwnPropSymbols(source)),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var prop = _step2.value;\n        if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n\n  return target;\n}; // src/index.ts\n\n\nimport \"@mapbox/search-js-web\";\nimport { config } from \"@mapbox/search-js-web\"; // src/components/AddressAutofill.tsx\n\nimport React, { useRef, useEffect, useImperativeHandle } from \"react\";\nvar AddressAutofill = React.forwardRef(function (props, refProp) {\n  var accessToken = props.accessToken,\n      options = props.options,\n      theme = props.theme,\n      popoverOptions = props.popoverOptions,\n      confirmOnBrowserAutofill = props.confirmOnBrowserAutofill,\n      browserAutofillEnabled = props.browserAutofillEnabled,\n      children = props.children,\n      onChange = props.onChange,\n      onSuggest = props.onSuggest,\n      onSuggestError = props.onSuggestError,\n      onRetrieve = props.onRetrieve,\n      interceptSearch = props.interceptSearch;\n  var ref = useRef();\n  useImperativeHandle(refProp, function () {\n    return {\n      focus: function focus() {\n        if (ref.current) return ref.current.focus();\n        throw new Error(\"AddressAutofill is not mounted\");\n      }\n    };\n  });\n  useEffect(function () {\n    if (ref.current) ref.current.options = options;\n  }, [ref.current, options]);\n  useEffect(function () {\n    if (ref.current) ref.current.interceptSearch = interceptSearch;\n  }, [ref.current, options]);\n  useEffect(function () {\n    if (ref.current) ref.current.theme = theme;\n  }, [ref.current, theme]);\n  useEffect(function () {\n    if (ref.current) ref.current.popoverOptions = popoverOptions;\n  }, [ref.current, popoverOptions]);\n  useEffect(function () {\n    if (ref.current) ref.current.confirmOnBrowserAutofill = confirmOnBrowserAutofill;\n  }, [ref.current, confirmOnBrowserAutofill]);\n  useEffect(function () {\n    if (ref.current) ref.current.browserAutofillEnabled = browserAutofillEnabled;\n  }, [ref.current, browserAutofillEnabled]);\n  useEffect(function () {\n    var node = ref.current;\n    if (!node) return;\n    if (!onSuggest) return;\n\n    var fn = function fn(e) {\n      return onSuggest(e.detail);\n    };\n\n    node.addEventListener(\"suggest\", fn);\n    return function () {\n      node.removeEventListener(\"suggest\", fn);\n    };\n  }, [ref.current, onSuggest]);\n  useEffect(function () {\n    var node = ref.current;\n    if (!node) return;\n    if (!onSuggestError) return;\n\n    var fn = function fn(e) {\n      return onSuggestError(e.detail);\n    };\n\n    node.addEventListener(\"suggesterror\", fn);\n    return function () {\n      node.removeEventListener(\"suggesterror\", fn);\n    };\n  }, [ref.current, onSuggestError]);\n  useEffect(function () {\n    var node = ref.current;\n    if (!node) return;\n    if (!onRetrieve) return;\n\n    var fn = function fn(e) {\n      return onRetrieve(e.detail);\n    };\n\n    node.addEventListener(\"retrieve\", fn);\n    return function () {\n      node.removeEventListener(\"retrieve\", fn);\n    };\n  }, [ref.current, onRetrieve]);\n  useEffect(function () {\n    var node = ref.current;\n    if (!node) return;\n    if (!onChange) return;\n\n    var fn = function fn(e) {\n      if (e.target !== e.currentTarget) return;\n      onChange(e.detail);\n    };\n\n    node.addEventListener(\"input\", fn);\n    return function () {\n      node.removeEventListener(\"input\", fn);\n    };\n  }, [ref.current, onChange]);\n  useEffect(function () {\n    if (ref.current) ref.current.accessToken = accessToken;\n  }, [ref.current, accessToken]);\n  return /* @__PURE__ */React.createElement(\"mapbox-address-autofill\", {\n    ref: ref\n  }, children);\n}); // src/components/SearchBox.tsx\n\nimport React2, { useRef as useRef2, useEffect as useEffect2, useImperativeHandle as useImperativeHandle2 } from \"react\";\nvar SearchBox = React2.forwardRef(function (props, refProp) {\n  var accessToken = props.accessToken,\n      options = props.options,\n      theme = props.theme,\n      popoverOptions = props.popoverOptions,\n      map = props.map,\n      value = props.value,\n      onChange = props.onChange,\n      onSuggest = props.onSuggest,\n      onSuggestError = props.onSuggestError,\n      onRetrieve = props.onRetrieve,\n      interceptSearch = props.interceptSearch;\n  var ref = useRef2();\n  useImperativeHandle2(refProp, function () {\n    return {\n      focus: function focus() {\n        if (ref.current) return ref.current.focus();\n        throw new Error(\"SearchBox is not mounted\");\n      }\n    };\n  });\n  useEffect2(function () {\n    if (ref.current) ref.current.options = options;\n  }, [ref.current, options]);\n  useEffect2(function () {\n    if (ref.current) ref.current.interceptSearch = interceptSearch;\n  }, [ref.current, options]);\n  useEffect2(function () {\n    if (ref.current) ref.current.theme = theme;\n  }, [ref.current, theme]);\n  useEffect2(function () {\n    if (ref.current) ref.current.popoverOptions = popoverOptions;\n  }, [ref.current, popoverOptions]);\n  useEffect2(function () {\n    if (ref.current) ref.current.value = value;\n  }, [ref.current, value]);\n  useEffect2(function () {\n    var node = ref.current;\n    if (!node) return;\n    node.bindMap(map);\n    return function () {\n      node.unbindMap();\n    };\n  }, [ref.current, map]);\n  useEffect2(function () {\n    var node = ref.current;\n    if (!node) return;\n    if (!onSuggest) return;\n\n    var fn = function fn(e) {\n      return onSuggest(e.detail);\n    };\n\n    node.addEventListener(\"suggest\", fn);\n    return function () {\n      node.removeEventListener(\"suggest\", fn);\n    };\n  }, [ref.current, onSuggest]);\n  useEffect2(function () {\n    var node = ref.current;\n    if (!node) return;\n    if (!onSuggestError) return;\n\n    var fn = function fn(e) {\n      return onSuggestError(e.detail);\n    };\n\n    node.addEventListener(\"suggesterror\", fn);\n    return function () {\n      node.removeEventListener(\"suggesterror\", fn);\n    };\n  }, [ref.current, onSuggestError]);\n  useEffect2(function () {\n    var node = ref.current;\n    if (!node) return;\n    if (!onRetrieve) return;\n\n    var fn = function fn(e) {\n      return onRetrieve(e.detail);\n    };\n\n    node.addEventListener(\"retrieve\", fn);\n    return function () {\n      node.removeEventListener(\"retrieve\", fn);\n    };\n  }, [ref.current, onRetrieve]);\n  useEffect2(function () {\n    var node = ref.current;\n    if (!node) return;\n    if (!onChange) return;\n\n    var fn = function fn(e) {\n      if (e.target !== e.currentTarget) return;\n      onChange(e.detail);\n    };\n\n    node.addEventListener(\"input\", fn);\n    return function () {\n      node.removeEventListener(\"input\", fn);\n    };\n  }, [ref.current, onChange]);\n  useEffect2(function () {\n    if (ref.current) ref.current.accessToken = accessToken;\n  }, [ref.current, accessToken]);\n  return /* @__PURE__ */React2.createElement(\"mapbox-search-box\", {\n    ref: ref\n  });\n}); // src/components/AddressMinimap.tsx\n\nimport React3, { useRef as useRef3, useEffect as useEffect3 } from \"react\";\n\nfunction AddressMinimap(props) {\n  var _props$canAdjustMarke = props.canAdjustMarker,\n      canAdjustMarker = _props$canAdjustMarke === void 0 ? false : _props$canAdjustMarke,\n      _props$keepMarkerCent = props.keepMarkerCentered,\n      keepMarkerCentered = _props$keepMarkerCent === void 0 ? false : _props$keepMarkerCent,\n      _props$markerAnchor = props.markerAnchor,\n      markerAnchor = _props$markerAnchor === void 0 ? \"bottom\" : _props$markerAnchor,\n      onSaveMarkerLocation = props.onSaveMarkerLocation,\n      _props$show = props.show,\n      show = _props$show === void 0 ? false : _props$show,\n      accessToken = props.accessToken,\n      _props$feature = props.feature,\n      feature = _props$feature === void 0 ? null : _props$feature,\n      _props$satelliteToggl = props.satelliteToggle,\n      satelliteToggle = _props$satelliteToggl === void 0 ? false : _props$satelliteToggl,\n      theme = props.theme,\n      _props$mapStyleMode = props.mapStyleMode,\n      mapStyleMode = _props$mapStyleMode === void 0 ? \"default\" : _props$mapStyleMode,\n      _props$defaultMapStyl = props.defaultMapStyle,\n      defaultMapStyle = _props$defaultMapStyl === void 0 ? [\"mapbox\", \"streets-v11\"] : _props$defaultMapStyl,\n      footer = props.footer;\n  var ref = useRef3();\n  useEffect3(function () {\n    if (!ref.current) return;\n\n    if (show) {\n      ref.current.show();\n    } else {\n      ref.current.hide();\n    }\n  }, [ref.current, show]);\n  useEffect3(function () {\n    if (ref.current) ref.current.theme = theme;\n  }, [ref.current, theme]);\n  useEffect3(function () {\n    if (ref.current) ref.current.feature = show ? feature : null;\n  }, [ref.current, feature, show]);\n  useEffect3(function () {\n    if (ref.current) ref.current.mapStyleMode = mapStyleMode;\n  }, [ref.current, mapStyleMode]);\n  useEffect3(function () {\n    if (ref.current) ref.current.defaultMapStyle = defaultMapStyle;\n  }, [ref.current, defaultMapStyle]);\n  useEffect3(function () {\n    if (footer === void 0) return;\n    if (ref.current) ref.current.footer = footer;\n  }, [ref.current, footer]);\n  useEffect3(function () {\n    if (ref.current) ref.current.accessToken = accessToken;\n  }, [ref.current, accessToken]);\n  useEffect3(function () {\n    if (ref.current) ref.current.onSaveMarkerLocation = onSaveMarkerLocation;\n  }, [ref.current, onSaveMarkerLocation]);\n  return /* @__PURE__ */React3.createElement(\"mapbox-address-minimap\", {\n    ref: ref,\n    \"can-adjust-marker\": canAdjustMarker,\n    \"keep-marker-centered\": keepMarkerCentered,\n    \"marker-anchor\": markerAnchor,\n    \"satellite-toggle\": satelliteToggle\n  });\n} // src/hooks/useEvented.tsx\n\n\nimport { useEffect as useEffect4, useRef as useRef4 } from \"react\";\n\nfunction useEvented(evented, eventName, cb) {\n  var cbRef = useRef4(cb);\n  useEffect4(function () {\n    cbRef.current = cb;\n  });\n  useEffect4(function () {\n    if (!evented) return;\n\n    var fn = function fn(object) {\n      return cbRef.current(object);\n    };\n\n    evented.addEventListener(eventName, fn);\n    return function () {\n      evented.removeEventListener(eventName, fn);\n    };\n  }, [evented, eventName, cbRef]);\n} // src/hooks/useMapboxAutofill.tsx\n\n\nimport { useEffect as useEffect5, useMemo } from \"react\";\nimport { MapboxAutofill } from \"@mapbox/search-js-core\";\nvar DEFAULTS = MapboxAutofill.defaults;\n\nfunction useMapboxAutofill(options) {\n  var autofill = useMemo(function () {\n    return new MapboxAutofill();\n  }, []);\n  useEffect5(function () {\n    var _a = options,\n        accessToken = _a.accessToken,\n        restOptions = __objRest(_a, [\"accessToken\"]);\n\n    autofill.accessToken = accessToken;\n    autofill.defaults = __spreadValues(__spreadValues({}, DEFAULTS), restOptions);\n  }, [options]);\n  return autofill;\n} // src/hooks/useMapboxSearch.tsx\n\n\nimport { useEffect as useEffect6, useMemo as useMemo2 } from \"react\";\nimport { MapboxSearch } from \"@mapbox/search-js-core\";\nvar DEFAULTS2 = MapboxSearch.defaults;\n\nfunction useMapboxSearch(options) {\n  var search = useMemo2(function () {\n    return new MapboxSearch();\n  }, []);\n  useEffect6(function () {\n    var _a = options,\n        accessToken = _a.accessToken,\n        restOptions = __objRest(_a, [\"accessToken\"]);\n\n    search.accessToken = accessToken;\n    search.defaults = __spreadValues(__spreadValues({}, DEFAULTS2), restOptions);\n  }, [options]);\n  return search;\n} // src/hooks/useSearchSession.tsx\n\n\nimport { MapboxSearch as MapboxSearch2, SearchSession } from \"@mapbox/search-js-core\";\nimport { useMemo as useMemo3 } from \"react\";\n\nfunction useSearchSession(search) {\n  var searchSession = useMemo3(function () {\n    return new SearchSession(search);\n  }, [search]);\n\n  if (search instanceof MapboxSearch2) {\n    return searchSession;\n  } else {\n    return searchSession;\n  }\n} // src/hooks/useConfirmAddress.tsx\n\n\nimport { useMemo as useMemo4, useRef as useRef5 } from \"react\";\nimport { confirmAddress } from \"@mapbox/search-js-web\";\n\nfunction useConfirmAddress() {\n  var optionsArg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var formRef = useRef5(null);\n  return useMemo4(function () {\n    return {\n      formRef: formRef,\n      showConfirm: function showConfirm() {\n        return confirmAddress(formRef.current, optionsArg);\n      }\n    };\n  }, [formRef, optionsArg]);\n}\n\nexport { AddressAutofill, AddressMinimap, SearchBox, config, useConfirmAddress, useEvented, useMapboxAutofill, useMapboxSearch, useSearchSession };","map":{"version":3,"mappings":"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","names":["AddressAutofill","React","forwardRef","props","refProp","accessToken","options","theme","popoverOptions","confirmOnBrowserAutofill","browserAutofillEnabled","children","onChange","onSuggest","onSuggestError","onRetrieve","interceptSearch","ref","useRef","useImperativeHandle","focus","current","Error","useEffect","node","fn","e","detail","addEventListener","removeEventListener","target","currentTarget","SearchBox","React2","map","value","useRef2","useImperativeHandle2","useEffect2","bindMap","unbindMap","canAdjustMarker","keepMarkerCentered","markerAnchor","onSaveMarkerLocation","show","feature","satelliteToggle","mapStyleMode","defaultMapStyle","footer","useRef3","useEffect3","hide","evented","eventName","cb","cbRef","useRef4","useEffect4","object","DEFAULTS","MapboxAutofill","defaults","autofill","useMemo","useEffect5","restOptions","__objRest","_a","__spreadValues","DEFAULTS2","MapboxSearch","search","useMemo2","useEffect6","searchSession","useMemo3","SearchSession","MapboxSearch2","optionsArg","formRef","useRef5","useMemo4","showConfirm","confirmAddress"],"sources":["/Users/akshayrajendraprasad/Downloads/Bedbugzbgone-1b773fb25e3250addc52927234b8e04bf7d3be81/bedbugzgone/node_modules/@mapbox/search-js-react/src/index.ts","/Users/akshayrajendraprasad/Downloads/Bedbugzbgone-1b773fb25e3250addc52927234b8e04bf7d3be81/bedbugzgone/node_modules/@mapbox/search-js-react/src/components/AddressAutofill.tsx","/Users/akshayrajendraprasad/Downloads/Bedbugzbgone-1b773fb25e3250addc52927234b8e04bf7d3be81/bedbugzgone/node_modules/@mapbox/search-js-react/src/components/SearchBox.tsx","/Users/akshayrajendraprasad/Downloads/Bedbugzbgone-1b773fb25e3250addc52927234b8e04bf7d3be81/bedbugzgone/node_modules/@mapbox/search-js-react/src/components/AddressMinimap.tsx","/Users/akshayrajendraprasad/Downloads/Bedbugzbgone-1b773fb25e3250addc52927234b8e04bf7d3be81/bedbugzgone/node_modules/@mapbox/search-js-react/src/hooks/useEvented.tsx","/Users/akshayrajendraprasad/Downloads/Bedbugzbgone-1b773fb25e3250addc52927234b8e04bf7d3be81/bedbugzgone/node_modules/@mapbox/search-js-react/src/hooks/useMapboxAutofill.tsx","/Users/akshayrajendraprasad/Downloads/Bedbugzbgone-1b773fb25e3250addc52927234b8e04bf7d3be81/bedbugzgone/node_modules/@mapbox/search-js-react/src/hooks/useMapboxSearch.tsx","/Users/akshayrajendraprasad/Downloads/Bedbugzbgone-1b773fb25e3250addc52927234b8e04bf7d3be81/bedbugzgone/node_modules/@mapbox/search-js-react/src/hooks/useSearchSession.tsx","/Users/akshayrajendraprasad/Downloads/Bedbugzbgone-1b773fb25e3250addc52927234b8e04bf7d3be81/bedbugzgone/node_modules/@mapbox/search-js-react/src/hooks/useConfirmAddress.tsx"],"sourcesContent":["import '@mapbox/search-js-web';\nexport { config } from '@mapbox/search-js-web';\n\nexport { AddressAutofill } from './components/AddressAutofill';\nexport { SearchBox } from './components/SearchBox';\nexport { AddressMinimap } from './components/AddressMinimap';\n\nexport { useEvented } from './hooks/useEvented';\nexport { useMapboxAutofill } from './hooks/useMapboxAutofill';\nexport { useMapboxSearch } from './hooks/useMapboxSearch';\nexport { useSearchSession } from './hooks/useSearchSession';\nexport { useConfirmAddress } from './hooks/useConfirmAddress';\n","/* eslint-disable @typescript-eslint/no-namespace */\n\nimport React, { useRef, useEffect, useImperativeHandle } from 'react';\n\nimport {\n  AutofillOptions,\n  AutofillSuggestionResponse,\n  AutofillRetrieveResponse\n} from '@mapbox/search-js-core';\nimport {\n  MapboxAddressAutofill,\n  Theme,\n  MapboxHTMLEvent,\n  AddressConfirmOptions,\n  PopoverOptions\n} from '@mapbox/search-js-web';\n\ndeclare global {\n  namespace JSX {\n    interface IntrinsicElements {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      'mapbox-address-autofill': any;\n    }\n  }\n}\n\n/**\n * @typedef AddressAutofillRefType\n */\nexport interface AddressAutofillRefType {\n  /**\n   * @see {@link MapboxAddressAutofill#focus}\n   */\n  focus: typeof MapboxAddressAutofill.prototype.focus;\n}\n\n/**\n * @typedef AddressAutofillProps\n */\nexport interface AddressAutofillProps {\n  /**\n   * The [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) to use for all requests.\n   */\n  accessToken: string;\n  /**\n   * Options to pass to the underlying {@link MapboxAutofill} interface.\n   * @example\n   * ```typescript\n   * <AddressAutofill options={{\n   *  language: 'en',\n   *  country: 'US',\n   * }}>\n   * ```\n   */\n  options?: Partial<AutofillOptions>;\n  /**\n   * The {@link Theme} to use for styling the autofill and confirmation dialog\n   * components.\n   * @example\n   * ```typescript\n   * <AddressAutofill theme={{\n   *   variables: {\n   *     colorPrimary: 'myBrandRed'\n   *   }\n   * }}>\n   * ```\n   */\n  theme?: Theme;\n  /**\n   * The {@link PopoverOptions} to define popover positioning.\n   * @example\n   * ```typescript\n   * <AddressAutofill popoverOptions={{\n   *   placement: 'top-start',\n   *   flip: true,\n   *   offset: 5\n   * }}>\n   * ```\n   */\n  popoverOptions?: Partial<PopoverOptions>;\n  /**\n   * If true, forms autofilled by the browser will prompt the\n   * {@link confirmAddress} dialog for user confirmation.\n   * An {@link AddressConfirmOptions} object can also be passed\n   * to prompt {@link confirmAddress} with custom options.\n   * Defaults to false.\n   * @example\n   * ```typescript\n   * <AddressAutofill confirmOnBrowserAutofill={{\n   *   minimap: true,\n   *   skipConfirmModal: (feature) =>\n   *     ['exact', 'high'].includes(\n   *       feature.properties.match_code.confidence\n   *     )\n   * }}>\n   * ```\n   */\n  confirmOnBrowserAutofill?: boolean | AddressConfirmOptions;\n\n  /**\n   * Enables the browser's autocomplete popup to show during the first two typed characters while Mapbox results are suppressed. Defaults to false.\n   *\n   * **Note:** Due to varying specifications, efforts to suppress browser autocomplete behavior may not work on all browsers.\n   */\n  browserAutofillEnabled?: boolean;\n\n  /**\n   * Children to render inside the autofill component. This **must** include\n   * an [`<input>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/text) element\n   * with either autocomplete type `\"street-address\"` or `\"address-line1\"`.\n   */\n  children: React.ReactChild;\n  /**\n   * Callback for when the `<input>` value changes.\n   */\n  onChange?: (value: string) => void;\n  /**\n   * Fired when the user is typing in the input and provides a list of suggestions.\n   * The underlying response from {@link MapboxAutofill} is passed.\n   */\n  onSuggest?: (res: AutofillSuggestionResponse) => void;\n  /**\n   * Fired when {@link MapboxAutofill} has errored providing a list of suggestions.\n   * The underlying error is passed.\n   */\n  onSuggestError?: (error: Error) => void;\n  /**\n   * Fired when the user has selected a suggestion, before the form is autofilled.\n   * The underlying response from {@link MapboxAutofill} is passed.\n   */\n  onRetrieve?: (res: AutofillRetrieveResponse) => void;\n\n  /**\n   * A callback providing the opportunity to validate and/or manipulate the input text before it triggers a search, for example by using a regular expression.\n   * If a truthy string value is returned, it will be passed into the underlying search API. If `null`, `undefined` or empty string is returned, no search request will be performed.\n   */\n  interceptSearch?: (value: string) => string;\n}\n\n/**\n * `<AddressAutofill>` is a React component that wraps an address\n * [`<input>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/text) element with intelligent, location-aware autocomplete functionality.\n *\n * To use this element, you must have a [Mapbox access token](https://www.mapbox.com/help/create-api-access-token/).\n *\n * This component must be a descendant of a [`<form>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form), and the form\n * must have inputs with proper HTML `autocomplete` attributes. If your application works with browser autofill, you may already have\n * this functionality.\n * - [The HTML autocomplete attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete)\n * - [Autofill](https://web.dev/learn/forms/autofill/)\n *\n * Internally, this wraps the [`<mapbox-address-autofill>`](https://docs.mapbox.com/mapbox-search-js/api/web/autofill/#mapboxaddressautofill) element.\n *\n * @function AddressAutofill\n * @param {AddressAutofillProps} props\n * @example\n * ```typescript\n * export function Component() {\n *   const [value, setValue] = React.useState('');\n *   return (\n *     <form>\n *       <AddressAutofill accessToken={<your access token here>}>\n *         <input\n *           autoComplete=\"shipping address-line1\"\n *           value={value}\n *           onChange={(e) => setValue(e.target.value)}\n *         />\n *       </AddressAutofill>\n *     </form>\n *   );\n * }\n * ```\n */\nexport const AddressAutofill = React.forwardRef(\n  (props: AddressAutofillProps, refProp): React.ReactElement => {\n    const {\n      accessToken,\n      options,\n      theme,\n      popoverOptions,\n      confirmOnBrowserAutofill,\n      browserAutofillEnabled,\n      children,\n      onChange,\n      onSuggest,\n      onSuggestError,\n      onRetrieve,\n      interceptSearch\n    } = props;\n    const ref = useRef<MapboxAddressAutofill>();\n\n    useImperativeHandle(refProp, () => ({\n      focus: () => {\n        if (ref.current) return ref.current.focus();\n        throw new Error('AddressAutofill is not mounted');\n      }\n    }));\n\n    // Update options.\n    useEffect(() => {\n      if (ref.current) ref.current.options = options;\n    }, [ref.current, options]);\n\n    // Update intercept search.\n    useEffect(() => {\n      if (ref.current) ref.current.interceptSearch = interceptSearch;\n    }, [ref.current, options]);\n\n    // Update theme.\n    useEffect(() => {\n      if (ref.current) ref.current.theme = theme;\n    }, [ref.current, theme]);\n\n    // Update popoverOptions\n    useEffect(() => {\n      if (ref.current) ref.current.popoverOptions = popoverOptions;\n    }, [ref.current, popoverOptions]);\n\n    // Update confirmOnBrowserAutofill\n    useEffect(() => {\n      if (ref.current)\n        ref.current.confirmOnBrowserAutofill = confirmOnBrowserAutofill;\n    }, [ref.current, confirmOnBrowserAutofill]);\n\n    // Update browserAutofillEnabled\n    useEffect(() => {\n      if (ref.current)\n        ref.current.browserAutofillEnabled = browserAutofillEnabled;\n    }, [ref.current, browserAutofillEnabled]);\n\n    // Update onSuggest.\n    useEffect(() => {\n      const node = ref.current;\n      if (!node) return;\n\n      if (!onSuggest) return;\n\n      const fn = (e: MapboxHTMLEvent<AutofillSuggestionResponse>) =>\n        onSuggest(e.detail);\n\n      node.addEventListener('suggest', fn);\n      return () => {\n        node.removeEventListener('suggest', fn);\n      };\n    }, [ref.current, onSuggest]);\n\n    // Update onSuggestError.\n    useEffect(() => {\n      const node = ref.current;\n      if (!node) return;\n\n      if (!onSuggestError) return;\n\n      const fn = (e: MapboxHTMLEvent<Error>) => onSuggestError(e.detail);\n\n      node.addEventListener('suggesterror', fn);\n      return () => {\n        node.removeEventListener('suggesterror', fn);\n      };\n    }, [ref.current, onSuggestError]);\n\n    // Update onRetrieve.\n    useEffect(() => {\n      const node = ref.current;\n      if (!node) return;\n\n      if (!onRetrieve) return;\n\n      const fn = (e: MapboxHTMLEvent<AutofillRetrieveResponse>) =>\n        onRetrieve(e.detail);\n\n      node.addEventListener('retrieve', fn);\n      return () => {\n        node.removeEventListener('retrieve', fn);\n      };\n    }, [ref.current, onRetrieve]);\n\n    // Update onChange.\n    useEffect(() => {\n      const node = ref.current;\n      if (!node) return;\n\n      if (!onChange) return;\n\n      const fn = (e: MapboxHTMLEvent<string>) => {\n        if (e.target !== e.currentTarget) return; // ignore child input event\n        onChange(e.detail);\n      };\n\n      node.addEventListener('input', fn);\n      return () => {\n        node.removeEventListener('input', fn);\n      };\n    }, [ref.current, onChange]);\n\n    // Update accessToken.\n    useEffect(() => {\n      if (ref.current) ref.current.accessToken = accessToken;\n    }, [ref.current, accessToken]);\n\n    return (\n      <mapbox-address-autofill ref={ref}>{children}</mapbox-address-autofill>\n    );\n  }\n);\n","/* eslint-disable @typescript-eslint/no-namespace */\n\nimport React, { useRef, useEffect, useImperativeHandle } from 'react';\n\nimport {\n  Options,\n  SuggestionResponse,\n  RetrieveResponse\n} from '@mapbox/search-js-core';\nimport {\n  MapboxSearchBox,\n  Theme,\n  MapboxHTMLEvent,\n  PopoverOptions\n} from '@mapbox/search-js-web';\n\ndeclare global {\n  namespace JSX {\n    interface IntrinsicElements {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      'mapbox-search-box': any;\n    }\n  }\n}\n\n/**\n * @typedef SearchBoxRefType\n */\nexport interface SearchBoxRefType {\n  /**\n   * @see {@link MapboxSearchBox#focus}\n   */\n  focus: typeof MapboxSearchBox.prototype.focus;\n}\n\n/**\n * @typedef SearchBoxProps\n */\nexport interface SearchBoxProps {\n  /**\n   * The [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) to use for all requests.\n   */\n  accessToken: string;\n  /**\n   * Options to pass to the underlying {@link MapboxSearch} interface.\n   * @example\n   * ```typescript\n   * <SearchBox options={{\n   *  language: 'en',\n   *  country: 'US',\n   * }}>\n   * ```\n   */\n  options?: Partial<Options>;\n  /**\n   * The {@link Theme} to use for styling the search box.\n   * @example\n   * ```typescript\n   * <SearchBox theme={{\n   *   variables: {\n   *     colorPrimary: 'myBrandRed'\n   *   }\n   * }}>\n   * ```\n   */\n  theme?: Theme;\n  /**\n   * The {@link PopoverOptions} to define popover positioning.\n   * @example\n   * ```typescript\n   * <SearchBox popoverOptions={{\n   *   placement: 'top-start',\n   *   flip: true,\n   *   offset: 5\n   * }}>\n   * ```\n   */\n  popoverOptions?: Partial<PopoverOptions>;\n  /**\n   * If specified, the map will be centered on the retrieved suggestion.\n   */\n  map?: mapboxgl.Map;\n  /**\n   * Value to display in the search box.\n   */\n  value?: string;\n  /**\n   * Callback for when the value changes.\n   */\n  onChange?: (value: string) => void;\n  /**\n   * Fired when the user is typing in the input and provides a list of suggestions.\n   * The underlying response from {@link MapboxSearch} is passed.\n   */\n  onSuggest?: (res: SuggestionResponse) => void;\n  /**\n   * Fired when {@link MapboxSearch} has errored providing a list of suggestions.\n   * The underlying error is passed.\n   */\n  onSuggestError?: (error: Error) => void;\n  /**\n   * Fired when the user has selected a suggestion.\n   * The underlying response from {@link MapboxSearch} is passed.\n   */\n  onRetrieve?: (res: RetrieveResponse) => void;\n\n  /**\n   * A callback providing the opportunity to validate and/or manipulate the input text before it triggers a search, for example by using a regular expression.\n   * If a truthy string value is returned, it will be passed into the underlying search API. If `null`, `undefined` or empty string  is returned, no search request will be performed.\n   */\n  interceptSearch?: (value: string) => string;\n}\n\n/**\n * `<SearchBox>` is a React component that provides an interactive search box,\n * powered by the Mapbox Search API.\n *\n * To use this element, you must have a [Mapbox access token](https://www.mapbox.com/help/create-api-access-token/).\n *\n * Internally, this wraps the [`<mapbox-search-box>`](https://docs.mapbox.com/mapbox-search-js/api/web/search/#mapboxsearchbox) element.\n *\n * @function SearchBox\n * @param {SearchBoxProps} props\n * @example\n * ```typescript\n * export function Component() {\n *   const [value, setValue] = React.useState('');\n *   return (\n *     <form>\n *       <SearchBox accessToken={<your access token here>} />\n *     </form>\n *   );\n * }\n * ```\n */\nexport const SearchBox = React.forwardRef(\n  (props: SearchBoxProps, refProp): React.ReactElement => {\n    const {\n      accessToken,\n      options,\n      theme,\n      popoverOptions,\n      map,\n      value,\n      onChange,\n      onSuggest,\n      onSuggestError,\n      onRetrieve,\n      interceptSearch\n    } = props;\n    const ref = useRef<MapboxSearchBox>();\n\n    useImperativeHandle(refProp, () => ({\n      focus: () => {\n        if (ref.current) return ref.current.focus();\n        throw new Error('SearchBox is not mounted');\n      }\n    }));\n\n    // Update options.\n    useEffect(() => {\n      if (ref.current) ref.current.options = options;\n    }, [ref.current, options]);\n\n    // Update intercept search.\n    useEffect(() => {\n      if (ref.current) ref.current.interceptSearch = interceptSearch;\n    }, [ref.current, options]);\n\n    // Update theme.\n    useEffect(() => {\n      if (ref.current) ref.current.theme = theme;\n    }, [ref.current, theme]);\n\n    // Update popoverOptions\n    useEffect(() => {\n      if (ref.current) ref.current.popoverOptions = popoverOptions;\n    }, [ref.current, popoverOptions]);\n\n    // Update value.\n    useEffect(() => {\n      if (ref.current) ref.current.value = value;\n    }, [ref.current, value]);\n\n    // Update map.\n    useEffect(() => {\n      const node = ref.current;\n      if (!node) return;\n\n      node.bindMap(map);\n      return () => {\n        node.unbindMap();\n      };\n    }, [ref.current, map]);\n\n    // Update onSuggest.\n    useEffect(() => {\n      const node = ref.current;\n      if (!node) return;\n\n      if (!onSuggest) return;\n\n      const fn = (e: MapboxHTMLEvent<SuggestionResponse>) =>\n        onSuggest(e.detail);\n\n      node.addEventListener('suggest', fn);\n      return () => {\n        node.removeEventListener('suggest', fn);\n      };\n    }, [ref.current, onSuggest]);\n\n    // Update onSuggestError.\n    useEffect(() => {\n      const node = ref.current;\n      if (!node) return;\n\n      if (!onSuggestError) return;\n\n      const fn = (e: MapboxHTMLEvent<Error>) => onSuggestError(e.detail);\n\n      node.addEventListener('suggesterror', fn);\n      return () => {\n        node.removeEventListener('suggesterror', fn);\n      };\n    }, [ref.current, onSuggestError]);\n\n    // Update onRetrieve.\n    useEffect(() => {\n      const node = ref.current;\n      if (!node) return;\n\n      if (!onRetrieve) return;\n\n      const fn = (e: MapboxHTMLEvent<RetrieveResponse>) => onRetrieve(e.detail);\n\n      node.addEventListener('retrieve', fn);\n      return () => {\n        node.removeEventListener('retrieve', fn);\n      };\n    }, [ref.current, onRetrieve]);\n\n    // Update onChange.\n    useEffect(() => {\n      const node = ref.current;\n      if (!node) return;\n\n      if (!onChange) return;\n\n      const fn = (e: MapboxHTMLEvent<string>) => {\n        if (e.target !== e.currentTarget) return; // ignore child input event\n        onChange(e.detail);\n      };\n\n      node.addEventListener('input', fn);\n      return () => {\n        node.removeEventListener('input', fn);\n      };\n    }, [ref.current, onChange]);\n\n    // Update accessToken.\n    useEffect(() => {\n      if (ref.current) ref.current.accessToken = accessToken;\n    }, [ref.current, accessToken]);\n\n    return <mapbox-search-box ref={ref} />;\n  }\n);\n","/* eslint-disable @typescript-eslint/no-namespace */\n\nimport React, { useRef, useEffect } from 'react';\n\nimport {\n  Anchor,\n  MapboxAddressMinimap,\n  MapStyleMode,\n  Theme\n} from '@mapbox/search-js-web';\n\ndeclare global {\n  namespace JSX {\n    interface IntrinsicElements {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      'mapbox-address-minimap': any;\n    }\n  }\n}\n\n/**\n * @typedef AddressMinimapProps\n */\nexport interface AddressMinimapProps {\n  /**\n   * If `true`, the marker can be moved around the map. Defaults to `false`.\n   *\n   * When editable, the marker can be moved around the map and the updated\n   * location can be referenced from the {@link AddressMinimapProps#onSaveMarkerLocation} callback.\n   */\n  canAdjustMarker?: boolean;\n  /**\n   * If `true`, the map when panned moves around the marker, keeping the marker\n   * centered. Defaults to `false`.\n   */\n  keepMarkerCentered?: boolean;\n  /**\n   * The anchor of the marker, relative to center of the expanded size. Defaults to `'bottom'`.\n   */\n  markerAnchor?: Anchor;\n  /**\n   * A client-defined callback that is triggered when the \"Save\" button is clicked in the editing interface,\n   * and gives access to the adjusted marker coordinate.\n   */\n  onSaveMarkerLocation?: (coordinate: [number, number]) => void;\n\n  /**\n   * Must be `true` for the minimap to be shown, in addition to {@link AddressMinimapProps#feature}\n   * being present.\n   */\n  show?: boolean;\n  /**\n   * The [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) to use for all requests.\n   *\n   * If not explicitly set on the component, this will reference the value in the global config object.\n   */\n  accessToken?: string;\n  /**\n   * A [GeoJSON](https://docs.mapbox.com/help/glossary/geojson/) Feature representing\n   * a [Point](https://geojson.org/geojson-spec.html#point) geometry.\n   *\n   * The minimap is hidden unless {@link AddressMinimapProps#feature} is truthy.\n   */\n  feature?: GeoJSON.Feature<GeoJSON.Point>;\n\n  /**\n   * If `true`, the map will have an image toggle between Map and Satellite styles.\n   */\n  satelliteToggle?: boolean;\n  /**\n   * The {@link Theme} to use for styling interface buttons.\n   * @example\n   * ```typescript\n   * <AddressMinimap theme={{\n   *   variables: {\n   *     colorPrimary: 'myBrandRed'\n   *   }\n   * }}>\n   * ```\n   */\n  theme?: Theme;\n  /**\n   * The map style to use, either `'default'` or `'satellite'`. The default map\n   * style is configurable with {@link AddressMinimapProps#defaultMapStyle}.\n   */\n  mapStyleMode?: MapStyleMode;\n  /**\n   * The map style to use for the default map style. Defaults to `['mapbox', 'streets-v11']`.\n   */\n  defaultMapStyle?: [string, string];\n  /**\n   * Custom footer text appearing below the map, when marker adjustment is enabled.\n   * If `true` or left undefined, the default footer text will be used.\n   * If `false`, the footer will not be shown.\n   */\n  footer?: boolean | string;\n}\n\n/**\n * `AddressMinimap` is a React component that displays a marker for confirmation purposes.\n *\n * Optionally, this marker is editable. When editable, the marker can be moved\n * around the map and the updated location is sent back to the Mapbox Contribute\n * workflow.\n *\n * The goal of `AddressMinimap` is to reduce delivery or geolocation error in shipping and\n * local dispatching contexts.\n *\n * `AddressMinimap` expands to fill its container, and is hidden unless\n * {@link AddressMinimapProps#feature} and {@link AddressMinimapProps#show} are truthy.\n *\n * Internally, this wraps the [`<mapbox-address-minimap>`](https://docs.mapbox.com/mapbox-search-js/api/web/minimap/#mapboxaddressminimap) element.\n *\n * @class AddressMinimap\n * @param {AddressMinimapProps} props\n * @example\n * ```typescript\n * export function Component() {\n *   return (\n *     <AddressMinimap accessToken={<your access token here>}>\n *     </AddressMinimap>\n *   );\n * }\n * ```\n */\nexport function AddressMinimap(props: AddressMinimapProps): React.ReactElement {\n  const {\n    canAdjustMarker = false,\n    keepMarkerCentered = false,\n    markerAnchor = 'bottom',\n    onSaveMarkerLocation,\n\n    show = false,\n    accessToken,\n    feature = null,\n\n    satelliteToggle = false,\n    theme,\n    mapStyleMode = 'default',\n    defaultMapStyle = ['mapbox', 'streets-v11'],\n    footer\n  } = props;\n  const ref = useRef<MapboxAddressMinimap>();\n\n  // Update show.\n  useEffect(() => {\n    if (!ref.current) return;\n    if (show) {\n      ref.current.show();\n    } else {\n      ref.current.hide();\n    }\n  }, [ref.current, show]);\n\n  // Update theme.\n  useEffect(() => {\n    if (ref.current) ref.current.theme = theme;\n  }, [ref.current, theme]);\n\n  // Update feature.\n  useEffect(() => {\n    if (ref.current) ref.current.feature = show ? feature : null;\n  }, [ref.current, feature, show]);\n\n  // Update mapStyleMode.\n  useEffect(() => {\n    if (ref.current) ref.current.mapStyleMode = mapStyleMode;\n  }, [ref.current, mapStyleMode]);\n\n  // Update defaultMapStyle.\n  useEffect(() => {\n    if (ref.current) ref.current.defaultMapStyle = defaultMapStyle;\n  }, [ref.current, defaultMapStyle]);\n\n  // Update footer.\n  useEffect(() => {\n    if (footer === undefined) return;\n    if (ref.current) ref.current.footer = footer;\n  }, [ref.current, footer]);\n\n  // Update accessToken.\n  useEffect(() => {\n    if (ref.current) ref.current.accessToken = accessToken;\n  }, [ref.current, accessToken]);\n\n  // Update onSaveMarkerLocation callback\n  useEffect(() => {\n    if (ref.current) ref.current.onSaveMarkerLocation = onSaveMarkerLocation;\n  }, [ref.current, onSaveMarkerLocation]);\n\n  return (\n    <mapbox-address-minimap\n      ref={ref}\n      can-adjust-marker={canAdjustMarker}\n      keep-marker-centered={keepMarkerCentered}\n      marker-anchor={markerAnchor}\n      satellite-toggle={satelliteToggle}\n    />\n  );\n}\n","import { useEffect, useRef } from 'react';\nimport { Evented } from '@mapbox/search-js-core';\n\n/**\n * A React hook to register an event listener on a Search JS Core Evented object.\n *\n * {@link Evented} is a base class that is inherited by {@link SearchSession}.\n */\nexport function useEvented<T, K extends keyof T>(\n  evented: Evented<T> | null,\n  eventName: K,\n  cb: (object: T[K]) => unknown\n): void {\n  const cbRef = useRef(cb);\n  useEffect(() => {\n    cbRef.current = cb;\n  });\n\n  useEffect(() => {\n    if (!evented) return;\n\n    const fn = (object?: T[K]) => cbRef.current(object);\n    evented.addEventListener(eventName, fn);\n\n    return () => {\n      evented.removeEventListener(eventName, fn);\n    };\n  }, [evented, eventName, cbRef]);\n}\n","import { useEffect, useMemo } from 'react';\nimport { AutofillOptions, MapboxAutofill } from '@mapbox/search-js-core';\n\nconst DEFAULTS = MapboxAutofill.defaults;\n\n/**\n * A React hook that returns a {@link MapboxAutofill} instance.\n *\n * @param {AutofillOptions} options\n * @param {string} options.accessToken\n * @see {@link MapboxAutofill}\n */\nexport function useMapboxAutofill(\n  options: Partial<{ accessToken: string } & AutofillOptions>\n): MapboxAutofill {\n  const autofill = useMemo(() => {\n    return new MapboxAutofill();\n  }, []);\n\n  useEffect(() => {\n    const { accessToken, ...restOptions } = options;\n    autofill.accessToken = accessToken;\n    autofill.defaults = {\n      ...DEFAULTS,\n      ...restOptions\n    };\n  }, [options]);\n\n  return autofill;\n}\n","import { useEffect, useMemo } from 'react';\nimport { Options, MapboxSearch } from '@mapbox/search-js-core';\n\nconst DEFAULTS = MapboxSearch.defaults;\n\n/**\n * A React hook that returns a {@link MapboxSearch} instance.\n *\n * @param {Options} options\n * @param {string} options.accessToken\n * @see {@link MapboxSearch}\n */\nexport function useMapboxSearch(\n  options: Partial<{ accessToken: string } & Options>\n): MapboxSearch {\n  const search = useMemo(() => {\n    return new MapboxSearch();\n  }, []);\n\n  useEffect(() => {\n    const { accessToken, ...restOptions } = options;\n    search.accessToken = accessToken;\n    search.defaults = {\n      ...DEFAULTS,\n      ...restOptions\n    };\n  }, [options]);\n\n  return search;\n}\n","import {\n  AutofillOptions,\n  AutofillRetrieveResponse,\n  AutofillSuggestion,\n  AutofillSuggestionResponse,\n  MapboxAutofill,\n  MapboxSearch,\n  Options,\n  RetrieveResponse,\n  SearchSession,\n  Suggestion,\n  SuggestionResponse\n} from '@mapbox/search-js-core';\nimport { useMemo } from 'react';\n\nexport type SearchSessionType = SearchSession<\n  Options,\n  Suggestion,\n  SuggestionResponse,\n  RetrieveResponse\n>;\n\nexport type AutofillSearchSessionType = SearchSession<\n  AutofillOptions,\n  AutofillSuggestion,\n  AutofillSuggestionResponse,\n  AutofillRetrieveResponse\n>;\n\nfunction useSearchSession(search: MapboxSearch): SearchSessionType;\nfunction useSearchSession(autofill: MapboxAutofill): AutofillSearchSessionType;\n\n/**\n * A React hook that returns a {@link SearchSession} instance.\n *\n * @param {MapboxSearch | MapboxAutofill} search\n * @returns {SearchSession}\n * @see {@link SearchSession}\n */\nfunction useSearchSession(\n  search: MapboxSearch | MapboxAutofill\n): SearchSessionType | AutofillSearchSessionType {\n  const searchSession = useMemo(() => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return new SearchSession(search as any);\n  }, [search]);\n\n  if (search instanceof MapboxSearch) {\n    return searchSession as SearchSessionType;\n  } else {\n    return searchSession as AutofillSearchSessionType;\n  }\n}\n\nexport { useSearchSession };\n","import { useMemo, useRef } from 'react';\n\nimport {\n  AddressConfirmOptions,\n  AddressConfirmShowResult,\n  confirmAddress\n} from '@mapbox/search-js-web';\n\ninterface UseConfirmAddressObject {\n  formRef: React.RefObject<HTMLFormElement>;\n  showConfirm: (\n    options?: Partial<AddressConfirmOptions>\n  ) => Promise<AddressConfirmShowResult>;\n}\n\n/**\n * A React hook that returns a form ref and a function to show the address confirmation modal\n *\n * @param {AddressConfirmOptions} optionsArg\n * @see {@link confirmAddress}\n */\nexport function useConfirmAddress(\n  optionsArg: AddressConfirmOptions = {}\n): UseConfirmAddressObject {\n  const formRef = useRef<HTMLFormElement>(null);\n  return useMemo(() => {\n    return {\n      formRef,\n      showConfirm: () => confirmAddress(formRef.current, optionsArg)\n    };\n  }, [formRef, optionsArg]);\n}\n"]},"metadata":{},"sourceType":"module"}